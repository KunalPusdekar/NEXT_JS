{"version":3,"sources":["../../../src/server/request/params.browser.ts"],"sourcesContent":["import type { Params } from './params'\n\nimport { ReflectAdapter } from '../web/spec-extension/adapters/reflect'\nimport { InvariantError } from '../../shared/lib/invariant-error'\nimport { describeStringPropertyAccess } from './utils'\n\nexport function createRenderParamsFromClient(underlyingParams: Params) {\n  if (process.env.NODE_ENV === 'development') {\n    return makeDynamicallyTrackedExoticParamsWithDevWarnings(underlyingParams)\n  } else {\n    return makeUntrackedExoticParams(underlyingParams)\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedParams = new WeakMap<CacheLifetime, Promise<Params>>()\n\nfunction makeUntrackedExoticParams(underlyingParams: Params): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const promise = Promise.resolve(underlyingParams)\n  CachedParams.set(underlyingParams, promise)\n\n  Object.defineProperties(promise, {\n    status: {\n      value: 'fulfilled',\n      writable: true,\n    },\n    value: {\n      value: underlyingParams,\n      writable: true,\n    },\n  })\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    switch (prop) {\n      case 'then':\n      case 'value':\n      case 'status': {\n        // These properties cannot be shadowed with a search param because they\n        // are necessary for ReactPromise's to work correctly with `use`\n        break\n      }\n      default: {\n        ;(promise as any)[prop] = underlyingParams[prop]\n      }\n    }\n  })\n\n  return promise\n}\n\nfunction makeDynamicallyTrackedExoticParamsWithDevWarnings(\n  underlyingParams: Params\n): Promise<Params> {\n  const cachedParams = CachedParams.get(underlyingParams)\n  if (cachedParams) {\n    return cachedParams\n  }\n\n  const promise = Promise.resolve(underlyingParams)\n\n  Object.defineProperties(promise, {\n    status: {\n      value: 'fulfilled',\n      writable: true,\n    },\n    value: {\n      value: underlyingParams,\n      writable: true,\n    },\n  })\n\n  const proxiedProperties = new Set<string>()\n  const unproxiedProperties: Array<string> = []\n\n  Object.keys(underlyingParams).forEach((prop) => {\n    switch (prop) {\n      case 'then':\n      case 'value':\n      case 'status': {\n        // These properties cannot be shadowed with a search param because they\n        // are necessary for ReactPromise's to work correctly with `use`\n        unproxiedProperties.push(prop)\n        break\n      }\n      default: {\n        proxiedProperties.add(prop)\n        ;(promise as any)[prop] = underlyingParams[prop]\n      }\n    }\n  })\n\n  const proxiedPromise = new Proxy(promise, {\n    get(target, prop, receiver) {\n      if (typeof prop === 'string') {\n        if (\n          // We are accessing a property that was proxied to the promise instance\n          proxiedProperties.has(prop) ||\n          // We are accessing a property that doesn't exist on the promise nor the underlying\n          Reflect.has(target, prop) === false\n        ) {\n          const expression = describeStringPropertyAccess('params', prop)\n          warnForSyncAccess(expression)\n        }\n      }\n      return ReflectAdapter.get(target, prop, receiver)\n    },\n    ownKeys(target) {\n      warnForEnumeration(unproxiedProperties)\n      return Reflect.ownKeys(target)\n    },\n  })\n\n  CachedParams.set(underlyingParams, proxiedPromise)\n  return proxiedPromise\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : function warnForSyncAccess(expression: string) {\n      if (process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS) {\n        return\n      }\n\n      console.error(\n        `A param property was accessed directly with ${expression}. \\`params\\` is now a Promise and should be unwrapped with \\`React.use()\\` before accessing properties of the underlying params object. In this version of Next.js direct access to param properties is still supported to facilitate migration but in a future version you will be required to unwrap \\`params\\` with \\`React.use()\\`.`\n      )\n    }\n\nconst warnForEnumeration = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : function warnForEnumeration(missingProperties: Array<string>) {\n      if (process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS) {\n        return\n      }\n\n      if (missingProperties.length) {\n        const describedMissingProperties =\n          describeListOfPropertyNames(missingProperties)\n        console.error(\n          `params are being enumerated incompletely missing these properties: ${describedMissingProperties}. ` +\n            `\\`params\\` should be unwrapped with \\`React.use()\\` before using its value. ` +\n            `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n        )\n      } else {\n        console.error(\n          `params are being enumerated. ` +\n            `\\`params\\` should be unwrapped with \\`React.use()\\` before using its value. ` +\n            `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n        )\n      }\n    }\n\nfunction describeListOfPropertyNames(properties: Array<string>) {\n  switch (properties.length) {\n    case 0:\n      throw new InvariantError(\n        'Expected describeListOfPropertyNames to be called with a non-empty list of strings.'\n      )\n    case 1:\n      return `\\`${properties[0]}\\``\n    case 2:\n      return `\\`${properties[0]}\\` and \\`${properties[1]}\\``\n    default: {\n      let description = ''\n      for (let i = 0; i < properties.length - 1; i++) {\n        description += `\\`${properties[i]}\\`, `\n      }\n      description += `, and \\`${properties[properties.length - 1]}\\``\n      return description\n    }\n  }\n}\n"],"names":["ReflectAdapter","InvariantError","describeStringPropertyAccess","createRenderParamsFromClient","underlyingParams","process","env","NODE_ENV","makeDynamicallyTrackedExoticParamsWithDevWarnings","makeUntrackedExoticParams","CachedParams","WeakMap","cachedParams","get","promise","Promise","resolve","set","Object","defineProperties","status","value","writable","keys","forEach","prop","proxiedProperties","Set","unproxiedProperties","push","add","proxiedPromise","Proxy","target","receiver","has","Reflect","expression","warnForSyncAccess","ownKeys","warnForEnumeration","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","console","error","missingProperties","length","describedMissingProperties","describeListOfPropertyNames","properties","description","i"],"mappings":"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"}