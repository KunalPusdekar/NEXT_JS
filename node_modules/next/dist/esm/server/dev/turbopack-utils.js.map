{"version":3,"sources":["../../../src/server/dev/turbopack-utils.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport loadJsConfig from '../../build/load-jsconfig'\nimport type {\n  ServerFields,\n  SetupOpts,\n} from '../lib/router-utils/setup-dev-bundler'\nimport type {\n  Issue,\n  StyledString,\n  TurbopackResult,\n  Endpoint,\n  Entrypoints as RawEntrypoints,\n  Update as TurbopackUpdate,\n  WrittenEndpoint,\n} from '../../build/swc/types'\nimport {\n  decodeMagicIdentifier,\n  MAGIC_IDENTIFIER_REGEX,\n} from '../../shared/lib/magic-identifier'\nimport { bold, green, magenta, red } from '../../lib/picocolors'\nimport {\n  type HMR_ACTION_TYPES,\n  HMR_ACTIONS_SENT_TO_BROWSER,\n} from './hot-reloader-types'\nimport * as Log from '../../build/output/log'\nimport type { PropagateToWorkersField } from '../lib/router-utils/types'\nimport type { TurbopackManifestLoader } from './turbopack/manifest-loader'\nimport type { AppRoute, Entrypoints, PageRoute } from './turbopack/types'\nimport {\n  type EntryKey,\n  getEntryKey,\n  splitEntryKey,\n} from './turbopack/entry-key'\nimport type ws from 'next/dist/compiled/ws'\nimport isInternal from '../../shared/lib/is-internal'\nimport { isMetadataRoute } from '../../lib/metadata/is-metadata-route'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\n\nexport async function getTurbopackJsConfig(\n  dir: string,\n  nextConfig: NextConfigComplete\n) {\n  const { jsConfig } = await loadJsConfig(dir, nextConfig)\n  return jsConfig ?? { compilerOptions: {} }\n}\n\n// An error generated from emitted Turbopack issues. This can include build\n// errors caused by issues with user code.\nexport class ModuleBuildError extends Error {\n  name = 'ModuleBuildError'\n}\n\n// An error caused by an internal issue in Turbopack. These should be written\n// to a log file and details should not be shown to the user.\nexport class TurbopackInternalError extends Error {\n  name = 'TurbopackInternalError'\n\n  constructor(cause: Error) {\n    super(cause.message)\n    this.stack = cause.stack\n  }\n}\n\n/**\n * Thin stopgap workaround layer to mimic existing wellknown-errors-plugin in webpack's build\n * to emit certain type of errors into cli.\n */\nexport function isWellKnownError(issue: Issue): boolean {\n  const { title } = issue\n  const formattedTitle = renderStyledStringToErrorAnsi(title)\n  // TODO: add more well known errors\n  if (\n    formattedTitle.includes('Module not found') ||\n    formattedTitle.includes('Unknown module type')\n  ) {\n    return true\n  }\n\n  return false\n}\n\nconst onceErrorSet = new Set()\n/**\n * Check if given issue is a warning to be display only once.\n * This miimics behavior of get-page-static-info's warnOnce.\n * @param issue\n * @returns\n */\nfunction shouldEmitOnceWarning(issue: Issue): boolean {\n  const { severity, title } = issue\n  if (severity === 'warning' && title.value === 'Invalid page configuration') {\n    if (onceErrorSet.has(issue)) {\n      return false\n    }\n    onceErrorSet.add(issue)\n  }\n\n  return true\n}\n\n/// Print out an issue to the console which should not block\n/// the build by throwing out or blocking error overlay.\nexport function printNonFatalIssue(issue: Issue) {\n  if (isRelevantWarning(issue) && shouldEmitOnceWarning(issue)) {\n    Log.warn(formatIssue(issue))\n  }\n}\n\nfunction isNodeModulesIssue(issue: Issue): boolean {\n  return (\n    issue.severity === 'warning' &&\n    issue.filePath.match(/^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/) !== null\n  )\n}\n\nexport function isRelevantWarning(issue: Issue): boolean {\n  return issue.severity === 'warning' && !isNodeModulesIssue(issue)\n}\n\nexport function formatIssue(issue: Issue) {\n  const { filePath, title, description, source } = issue\n  let { documentationLink } = issue\n  let formattedTitle = renderStyledStringToErrorAnsi(title).replace(\n    /\\n/g,\n    '\\n    '\n  )\n\n  // TODO: Use error codes to identify these\n  // TODO: Generalize adapting Turbopack errors to Next.js errors\n  if (formattedTitle.includes('Module not found')) {\n    // For compatiblity with webpack\n    // TODO: include columns in webpack errors.\n    documentationLink = 'https://nextjs.org/docs/messages/module-not-found'\n  }\n\n  let formattedFilePath = filePath\n    .replace('[project]/', './')\n    .replaceAll('/./', '/')\n    .replace('\\\\\\\\?\\\\', '')\n\n  let message = ''\n\n  if (source && source.range) {\n    const { start } = source.range\n    message = `${formattedFilePath}:${start.line + 1}:${\n      start.column + 1\n    }\\n${formattedTitle}`\n  } else if (formattedFilePath) {\n    message = `${formattedFilePath}\\n${formattedTitle}`\n  } else {\n    message = formattedTitle\n  }\n  message += '\\n'\n\n  if (\n    source?.range &&\n    source.source.content &&\n    // ignore Next.js/React internals, as these can often be huge bundled files.\n    !isInternal(filePath)\n  ) {\n    const { start, end } = source.range\n    const { codeFrameColumns } = require('next/dist/compiled/babel/code-frame')\n\n    message +=\n      codeFrameColumns(\n        source.source.content,\n        {\n          start: {\n            line: start.line + 1,\n            column: start.column + 1,\n          },\n          end: {\n            line: end.line + 1,\n            column: end.column + 1,\n          },\n        },\n        { forceColor: true }\n      ).trim() + '\\n\\n'\n  }\n\n  if (description) {\n    message += renderStyledStringToErrorAnsi(description) + '\\n\\n'\n  }\n\n  // TODO: make it possible to enable this for debugging, but not in tests.\n  // if (detail) {\n  //   message += renderStyledStringToErrorAnsi(detail) + '\\n\\n'\n  // }\n\n  // TODO: Include a trace from the issue.\n\n  if (documentationLink) {\n    message += documentationLink + '\\n\\n'\n  }\n\n  return message\n}\n\ntype IssueKey = `${Issue['severity']}-${Issue['filePath']}-${string}-${string}`\nexport type IssuesMap = Map<IssueKey, Issue>\nexport type EntryIssuesMap = Map<EntryKey, IssuesMap>\nexport type TopLevelIssuesMap = IssuesMap\n\nfunction getIssueKey(issue: Issue): IssueKey {\n  return `${issue.severity}-${issue.filePath}-${JSON.stringify(\n    issue.title\n  )}-${JSON.stringify(issue.description)}`\n}\n\nexport function processTopLevelIssues(\n  currentTopLevelIssues: TopLevelIssuesMap,\n  result: TurbopackResult\n) {\n  currentTopLevelIssues.clear()\n\n  for (const issue of result.issues) {\n    const issueKey = getIssueKey(issue)\n    currentTopLevelIssues.set(issueKey, issue)\n  }\n}\n\nexport function processIssues(\n  currentEntryIssues: EntryIssuesMap,\n  key: EntryKey,\n  result: TurbopackResult,\n  throwIssue: boolean,\n  logErrors: boolean\n) {\n  const newIssues = new Map<IssueKey, Issue>()\n  currentEntryIssues.set(key, newIssues)\n\n  const relevantIssues = new Set()\n\n  for (const issue of result.issues) {\n    if (\n      issue.severity !== 'error' &&\n      issue.severity !== 'fatal' &&\n      issue.severity !== 'warning'\n    )\n      continue\n\n    const issueKey = getIssueKey(issue)\n    newIssues.set(issueKey, issue)\n\n    if (issue.severity !== 'warning') {\n      if (throwIssue) {\n        const formatted = formatIssue(issue)\n        relevantIssues.add(formatted)\n      }\n      // if we throw the issue it will most likely get handed and logged elsewhere\n      else if (logErrors && isWellKnownError(issue)) {\n        const formatted = formatIssue(issue)\n        Log.error(formatted)\n      }\n    }\n  }\n\n  if (relevantIssues.size && throwIssue) {\n    throw new ModuleBuildError([...relevantIssues].join('\\n\\n'))\n  }\n}\n\nexport function renderStyledStringToErrorAnsi(string: StyledString): string {\n  function decodeMagicIdentifiers(str: string): string {\n    return str.replaceAll(MAGIC_IDENTIFIER_REGEX, (ident) => {\n      try {\n        return magenta(`{${decodeMagicIdentifier(ident)}}`)\n      } catch (e) {\n        return magenta(`{${ident} (decoding failed: ${e})}`)\n      }\n    })\n  }\n\n  switch (string.type) {\n    case 'text':\n      return decodeMagicIdentifiers(string.value)\n    case 'strong':\n      return bold(red(decodeMagicIdentifiers(string.value)))\n    case 'code':\n      return green(decodeMagicIdentifiers(string.value))\n    case 'line':\n      return string.value.map(renderStyledStringToErrorAnsi).join('')\n    case 'stack':\n      return string.value.map(renderStyledStringToErrorAnsi).join('\\n')\n    default:\n      throw new Error('Unknown StyledString type', string)\n  }\n}\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\n\nexport function msToNs(ms: number): bigint {\n  return BigInt(Math.floor(ms)) * MILLISECONDS_IN_NANOSECOND\n}\n\nexport type ChangeSubscriptions = Map<\n  EntryKey,\n  Promise<AsyncIterableIterator<TurbopackResult>>\n>\n\nexport type HandleWrittenEndpoint = (\n  key: EntryKey,\n  result: TurbopackResult<WrittenEndpoint>\n) => void\n\nexport type StartChangeSubscription = (\n  key: EntryKey,\n  includeIssues: boolean,\n  endpoint: Endpoint,\n  makePayload: (\n    change: TurbopackResult\n  ) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void,\n  onError?: (e: Error) => Promise<HMR_ACTION_TYPES> | HMR_ACTION_TYPES | void\n) => Promise<void>\n\nexport type StopChangeSubscription = (key: EntryKey) => Promise<void>\n\nexport type SendHmr = (id: string, payload: HMR_ACTION_TYPES) => void\n\nexport type StartBuilding = (\n  id: string,\n  requestUrl: string | undefined,\n  forceRebuild: boolean\n) => () => void\n\nexport type ReadyIds = Set<string>\n\nexport type ClientState = {\n  clientIssues: EntryIssuesMap\n  hmrPayloads: Map<string, HMR_ACTION_TYPES>\n  turbopackUpdates: TurbopackUpdate[]\n  subscriptions: Map<string, AsyncIterator<any>>\n}\n\nexport type ClientStateMap = WeakMap<ws, ClientState>\n\n// hooks only used by the dev server.\ntype HandleRouteTypeHooks = {\n  handleWrittenEndpoint: HandleWrittenEndpoint\n  subscribeToChanges: StartChangeSubscription\n}\n\nexport async function handleRouteType({\n  dev,\n  page,\n  pathname,\n  route,\n  currentEntryIssues,\n  entrypoints,\n  manifestLoader,\n  readyIds,\n  devRewrites,\n  productionRewrites,\n  hooks,\n  logErrors,\n}: {\n  dev: boolean\n  page: string\n  pathname: string\n  route: PageRoute | AppRoute\n\n  currentEntryIssues: EntryIssuesMap\n  entrypoints: Entrypoints\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  readyIds?: ReadyIds // dev\n\n  hooks?: HandleRouteTypeHooks // dev\n}) {\n  const shouldCreateWebpackStats = process.env.TURBOPACK_STATS != null\n\n  switch (route.type) {\n    case 'page': {\n      const clientKey = getEntryKey('pages', 'client', page)\n      const serverKey = getEntryKey('pages', 'server', page)\n\n      try {\n        if (entrypoints.global.app) {\n          const key = getEntryKey('pages', 'server', '_app')\n\n          const writtenEndpoint = await entrypoints.global.app.writeToDisk()\n          hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n          processIssues(\n            currentEntryIssues,\n            key,\n            writtenEndpoint,\n            false,\n            logErrors\n          )\n        }\n        await manifestLoader.loadBuildManifest('_app')\n        await manifestLoader.loadPagesManifest('_app')\n\n        if (entrypoints.global.document) {\n          const key = getEntryKey('pages', 'server', '_document')\n\n          const writtenEndpoint =\n            await entrypoints.global.document.writeToDisk()\n          hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n          processIssues(\n            currentEntryIssues,\n            key,\n            writtenEndpoint,\n            false,\n            logErrors\n          )\n        }\n        await manifestLoader.loadPagesManifest('_document')\n\n        const writtenEndpoint = await route.htmlEndpoint.writeToDisk()\n        hooks?.handleWrittenEndpoint(serverKey, writtenEndpoint)\n\n        const type = writtenEndpoint?.type\n\n        await manifestLoader.loadBuildManifest(page)\n        await manifestLoader.loadPagesManifest(page)\n        if (type === 'edge') {\n          await manifestLoader.loadMiddlewareManifest(page, 'pages')\n        } else {\n          manifestLoader.deleteMiddlewareManifest(serverKey)\n        }\n        await manifestLoader.loadFontManifest('/_app', 'pages')\n        await manifestLoader.loadFontManifest(page, 'pages')\n        await manifestLoader.loadLoadableManifest(page, 'pages')\n\n        if (shouldCreateWebpackStats) {\n          await manifestLoader.loadWebpackStats(page, 'pages')\n        }\n\n        await manifestLoader.writeManifests({\n          devRewrites,\n          productionRewrites,\n          entrypoints,\n        })\n\n        processIssues(\n          currentEntryIssues,\n          serverKey,\n          writtenEndpoint,\n          false,\n          logErrors\n        )\n      } finally {\n        if (dev) {\n          // TODO subscriptions should only be caused by the WebSocket connections\n          // otherwise we don't known when to unsubscribe and this leaking\n          hooks?.subscribeToChanges(\n            serverKey,\n            false,\n            route.dataEndpoint,\n            () => {\n              // Report the next compilation again\n              readyIds?.delete(pathname)\n              return {\n                event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n                pages: [page],\n              }\n            },\n            () => {\n              return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n            }\n          )\n          hooks?.subscribeToChanges(\n            clientKey,\n            false,\n            route.htmlEndpoint,\n            () => {\n              return {\n                event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES,\n              }\n            },\n            () => {\n              return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n            }\n          )\n          if (entrypoints.global.document) {\n            hooks?.subscribeToChanges(\n              getEntryKey('pages', 'server', '_document'),\n              false,\n              entrypoints.global.document,\n              () => {\n                return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n              },\n              () => {\n                return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n              }\n            )\n          }\n        }\n      }\n\n      break\n    }\n    case 'page-api': {\n      const key = getEntryKey('pages', 'server', page)\n\n      const writtenEndpoint = await route.endpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      const type = writtenEndpoint.type\n\n      await manifestLoader.loadPagesManifest(page)\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'pages')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n      await manifestLoader.loadLoadableManifest(page, 'pages')\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n\n      processIssues(currentEntryIssues, key, writtenEndpoint, true, logErrors)\n\n      break\n    }\n    case 'app-page': {\n      const key = getEntryKey('app', 'server', page)\n\n      const writtenEndpoint = await route.htmlEndpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      if (dev) {\n        // TODO subscriptions should only be caused by the WebSocket connections\n        // otherwise we don't known when to unsubscribe and this leaking\n        hooks?.subscribeToChanges(\n          key,\n          true,\n          route.rscEndpoint,\n          (change) => {\n            if (change.issues.some((issue) => issue.severity === 'error')) {\n              // Ignore any updates that has errors\n              // There will be another update without errors eventually\n              return\n            }\n            // Report the next compilation again\n            readyIds?.delete(pathname)\n            return {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n            }\n          },\n          () => {\n            return {\n              action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n            }\n          }\n        )\n      }\n\n      const type = writtenEndpoint.type\n\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'app')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n\n      await manifestLoader.loadAppBuildManifest(page)\n      await manifestLoader.loadBuildManifest(page, 'app')\n      await manifestLoader.loadAppPathsManifest(page)\n      await manifestLoader.loadActionManifest(page)\n      await manifestLoader.loadLoadableManifest(page, 'app')\n      await manifestLoader.loadFontManifest(page, 'app')\n\n      if (shouldCreateWebpackStats) {\n        await manifestLoader.loadWebpackStats(page, 'app')\n      }\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n\n      processIssues(currentEntryIssues, key, writtenEndpoint, dev, logErrors)\n\n      break\n    }\n    case 'app-route': {\n      const key = getEntryKey('app', 'server', page)\n\n      const writtenEndpoint = await route.endpoint.writeToDisk()\n      hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n\n      const type = writtenEndpoint.type\n\n      await manifestLoader.loadAppPathsManifest(page)\n\n      if (type === 'edge') {\n        await manifestLoader.loadMiddlewareManifest(page, 'app')\n      } else {\n        manifestLoader.deleteMiddlewareManifest(key)\n      }\n\n      await manifestLoader.writeManifests({\n        devRewrites,\n        productionRewrites,\n        entrypoints,\n      })\n      processIssues(currentEntryIssues, key, writtenEndpoint, true, logErrors)\n\n      break\n    }\n    default: {\n      throw new Error(`unknown route type ${(route as any).type} for ${page}`)\n    }\n  }\n}\n\n/**\n * Maintains a mapping between entrypoins and the corresponding client asset paths.\n */\nexport class AssetMapper {\n  private entryMap: Map<EntryKey, Set<string>> = new Map()\n  private assetMap: Map<string, Set<EntryKey>> = new Map()\n\n  /**\n   * Overrides asset paths for a key and updates the mapping from path to key.\n   *\n   * @param key\n   * @param assetPaths asset paths relative to the .next directory\n   */\n  setPathsForKey(key: EntryKey, assetPaths: string[]): void {\n    this.delete(key)\n\n    const newAssetPaths = new Set(assetPaths)\n    this.entryMap.set(key, newAssetPaths)\n\n    for (const assetPath of newAssetPaths) {\n      let assetPathKeys = this.assetMap.get(assetPath)\n      if (!assetPathKeys) {\n        assetPathKeys = new Set()\n        this.assetMap.set(assetPath, assetPathKeys)\n      }\n\n      assetPathKeys!.add(key)\n    }\n  }\n\n  /**\n   * Deletes the key and any asset only referenced by this key.\n   *\n   * @param key\n   */\n  delete(key: EntryKey) {\n    for (const assetPath of this.getAssetPathsByKey(key)) {\n      const assetPathKeys = this.assetMap.get(assetPath)\n\n      assetPathKeys?.delete(key)\n\n      if (!assetPathKeys?.size) {\n        this.assetMap.delete(assetPath)\n      }\n    }\n\n    this.entryMap.delete(key)\n  }\n\n  getAssetPathsByKey(key: EntryKey): string[] {\n    return Array.from(this.entryMap.get(key) ?? [])\n  }\n\n  getKeysByAsset(path: string): EntryKey[] {\n    return Array.from(this.assetMap.get(path) ?? [])\n  }\n\n  keys(): IterableIterator<EntryKey> {\n    return this.entryMap.keys()\n  }\n}\n\nexport function hasEntrypointForKey(\n  entrypoints: Entrypoints,\n  key: EntryKey,\n  assetMapper: AssetMapper | undefined\n): boolean {\n  const { type, page } = splitEntryKey(key)\n\n  switch (type) {\n    case 'app':\n      return entrypoints.app.has(page)\n    case 'pages':\n      switch (page) {\n        case '_app':\n          return entrypoints.global.app != null\n        case '_document':\n          return entrypoints.global.document != null\n        case '_error':\n          return entrypoints.global.error != null\n        default:\n          return entrypoints.page.has(page)\n      }\n    case 'root':\n      switch (page) {\n        case 'middleware':\n          return entrypoints.global.middleware != null\n        case 'instrumentation':\n          return entrypoints.global.instrumentation != null\n        default:\n          return false\n      }\n    case 'assets':\n      if (!assetMapper) {\n        return false\n      }\n\n      return assetMapper\n        .getKeysByAsset(page)\n        .some((pageKey) =>\n          hasEntrypointForKey(entrypoints, pageKey, assetMapper)\n        )\n    default: {\n      // validation that we covered all cases, this should never run.\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const _: never = type\n      return false\n    }\n  }\n}\n\n// hooks only used by the dev server.\ntype HandleEntrypointsHooks = {\n  handleWrittenEndpoint: HandleWrittenEndpoint\n  propagateServerField: (\n    field: PropagateToWorkersField,\n    args: any\n  ) => Promise<void>\n  sendHmr: SendHmr\n  startBuilding: StartBuilding\n  subscribeToChanges: StartChangeSubscription\n  unsubscribeFromChanges: StopChangeSubscription\n  unsubscribeFromHmrEvents: (client: ws, id: string) => void\n}\n\ntype HandleEntrypointsDevOpts = {\n  assetMapper: AssetMapper\n  changeSubscriptions: ChangeSubscriptions\n  clients: Set<ws>\n  clientStates: ClientStateMap\n  serverFields: ServerFields\n\n  hooks: HandleEntrypointsHooks\n}\n\nexport async function handleEntrypoints({\n  entrypoints,\n\n  currentEntrypoints,\n\n  currentEntryIssues,\n  manifestLoader,\n  devRewrites,\n  productionRewrites,\n  logErrors,\n  dev,\n}: {\n  entrypoints: TurbopackResult<RawEntrypoints>\n\n  currentEntrypoints: Entrypoints\n\n  currentEntryIssues: EntryIssuesMap\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  dev?: HandleEntrypointsDevOpts\n}) {\n  currentEntrypoints.global.app = entrypoints.pagesAppEndpoint\n  currentEntrypoints.global.document = entrypoints.pagesDocumentEndpoint\n  currentEntrypoints.global.error = entrypoints.pagesErrorEndpoint\n\n  currentEntrypoints.global.instrumentation = entrypoints.instrumentation\n\n  currentEntrypoints.page.clear()\n  currentEntrypoints.app.clear()\n\n  for (const [pathname, route] of entrypoints.routes) {\n    switch (route.type) {\n      case 'page':\n      case 'page-api':\n        currentEntrypoints.page.set(pathname, route)\n        break\n      case 'app-page': {\n        route.pages.forEach((page) => {\n          currentEntrypoints.app.set(page.originalName, {\n            type: 'app-page',\n            ...page,\n          })\n        })\n        break\n      }\n      case 'app-route': {\n        currentEntrypoints.app.set(route.originalName, route)\n        break\n      }\n      default:\n        Log.info(`skipping ${pathname} (${route.type})`)\n        break\n    }\n  }\n\n  if (dev) {\n    await handleEntrypointsDevCleanup({\n      currentEntryIssues,\n      currentEntrypoints,\n\n      ...dev,\n    })\n  }\n\n  const { middleware, instrumentation } = entrypoints\n\n  // We check for explicit true/false, since it's initialized to\n  // undefined during the first loop (middlewareChanges event is\n  // unnecessary during the first serve)\n  if (currentEntrypoints.global.middleware && !middleware) {\n    const key = getEntryKey('root', 'server', 'middleware')\n    // Went from middleware to no middleware\n    await dev?.hooks.unsubscribeFromChanges(key)\n    currentEntryIssues.delete(key)\n    dev?.hooks.sendHmr('middleware', {\n      event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n    })\n  } else if (!currentEntrypoints.global.middleware && middleware) {\n    // Went from no middleware to middleware\n    dev?.hooks.sendHmr('middleware', {\n      event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n    })\n  }\n\n  currentEntrypoints.global.middleware = middleware\n\n  if (instrumentation) {\n    const processInstrumentation = async (\n      name: string,\n      prop: 'nodeJs' | 'edge'\n    ) => {\n      const key = getEntryKey('root', 'server', name)\n\n      const writtenEndpoint = await instrumentation[prop].writeToDisk()\n      dev?.hooks.handleWrittenEndpoint(key, writtenEndpoint)\n      processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n    }\n    await processInstrumentation('instrumentation.nodeJs', 'nodeJs')\n    await processInstrumentation('instrumentation.edge', 'edge')\n    await manifestLoader.loadMiddlewareManifest(\n      'instrumentation',\n      'instrumentation'\n    )\n    await manifestLoader.writeManifests({\n      devRewrites,\n      productionRewrites,\n      entrypoints: currentEntrypoints,\n    })\n\n    if (dev) {\n      dev.serverFields.actualInstrumentationHookFile = '/instrumentation'\n      await dev.hooks.propagateServerField(\n        'actualInstrumentationHookFile',\n        dev.serverFields.actualInstrumentationHookFile\n      )\n    }\n  } else {\n    if (dev) {\n      dev.serverFields.actualInstrumentationHookFile = undefined\n      await dev.hooks.propagateServerField(\n        'actualInstrumentationHookFile',\n        dev.serverFields.actualInstrumentationHookFile\n      )\n    }\n  }\n\n  if (middleware) {\n    const key = getEntryKey('root', 'server', 'middleware')\n\n    const endpoint = middleware.endpoint\n\n    async function processMiddleware() {\n      const writtenEndpoint = await endpoint.writeToDisk()\n      dev?.hooks.handleWrittenEndpoint(key, writtenEndpoint)\n      processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n      await manifestLoader.loadMiddlewareManifest('middleware', 'middleware')\n      if (dev) {\n        dev.serverFields.middleware = {\n          match: null as any,\n          page: '/',\n          matchers:\n            manifestLoader.getMiddlewareManifest(key)?.middleware['/'].matchers,\n        }\n      }\n    }\n    await processMiddleware()\n\n    if (dev) {\n      dev?.hooks.subscribeToChanges(\n        key,\n        false,\n        endpoint,\n        async () => {\n          const finishBuilding = dev.hooks.startBuilding(\n            'middleware',\n            undefined,\n            true\n          )\n          await processMiddleware()\n          await dev.hooks.propagateServerField(\n            'actualMiddlewareFile',\n            dev.serverFields.actualMiddlewareFile\n          )\n          await dev.hooks.propagateServerField(\n            'middleware',\n            dev.serverFields.middleware\n          )\n          await manifestLoader.writeManifests({\n            devRewrites,\n            productionRewrites,\n            entrypoints: currentEntrypoints,\n          })\n\n          finishBuilding?.()\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES }\n        },\n        () => {\n          return {\n            event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n          }\n        }\n      )\n    }\n  } else {\n    manifestLoader.deleteMiddlewareManifest(\n      getEntryKey('root', 'server', 'middleware')\n    )\n    if (dev) {\n      dev.serverFields.actualMiddlewareFile = undefined\n      dev.serverFields.middleware = undefined\n    }\n  }\n\n  if (dev) {\n    await dev.hooks.propagateServerField(\n      'actualMiddlewareFile',\n      dev.serverFields.actualMiddlewareFile\n    )\n    await dev.hooks.propagateServerField(\n      'middleware',\n      dev.serverFields.middleware\n    )\n  }\n}\n\nasync function handleEntrypointsDevCleanup({\n  currentEntryIssues,\n  currentEntrypoints,\n\n  assetMapper,\n  changeSubscriptions,\n  clients,\n  clientStates,\n\n  hooks,\n}: {\n  currentEntrypoints: Entrypoints\n  currentEntryIssues: EntryIssuesMap\n} & HandleEntrypointsDevOpts) {\n  // this needs to be first as `hasEntrypointForKey` uses the `assetMapper`\n  for (const key of assetMapper.keys()) {\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      assetMapper.delete(key)\n    }\n  }\n\n  for (const key of changeSubscriptions.keys()) {\n    // middleware is handled separately\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      await hooks.unsubscribeFromChanges(key)\n    }\n  }\n\n  for (const [key] of currentEntryIssues) {\n    if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n      currentEntryIssues.delete(key)\n    }\n  }\n\n  for (const client of clients) {\n    const state = clientStates.get(client)\n    if (!state) {\n      continue\n    }\n\n    for (const key of state.clientIssues.keys()) {\n      if (!hasEntrypointForKey(currentEntrypoints, key, assetMapper)) {\n        state.clientIssues.delete(key)\n      }\n    }\n\n    for (const id of state.subscriptions.keys()) {\n      if (\n        !hasEntrypointForKey(\n          currentEntrypoints,\n          getEntryKey('assets', 'client', id),\n          assetMapper\n        )\n      ) {\n        hooks.unsubscribeFromHmrEvents(client, id)\n      }\n    }\n  }\n}\n\nexport async function handlePagesErrorRoute({\n  dev,\n  currentEntryIssues,\n  entrypoints,\n  manifestLoader,\n  devRewrites,\n  productionRewrites,\n  logErrors,\n\n  hooks,\n}: {\n  dev: boolean\n  currentEntryIssues: EntryIssuesMap\n  entrypoints: Entrypoints\n  manifestLoader: TurbopackManifestLoader\n  devRewrites: SetupOpts['fsChecker']['rewrites'] | undefined\n  productionRewrites: CustomRoutes['rewrites'] | undefined\n  logErrors: boolean\n\n  hooks?: HandleRouteTypeHooks // dev\n}) {\n  if (entrypoints.global.app) {\n    const key = getEntryKey('pages', 'server', '_app')\n\n    const writtenEndpoint = await entrypoints.global.app.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.app,\n        () => {\n          // There's a special case for this in `../client/page-bootstrap.ts`.\n          // https://github.com/vercel/next.js/blob/08d7a7e5189a835f5dcb82af026174e587575c0e/packages/next/src/client/page-bootstrap.ts#L69-L71\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES }\n        },\n        () => {\n          return {\n            action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE,\n          }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadBuildManifest('_app')\n  await manifestLoader.loadPagesManifest('_app')\n  await manifestLoader.loadFontManifest('_app')\n\n  if (entrypoints.global.document) {\n    const key = getEntryKey('pages', 'server', '_document')\n\n    const writtenEndpoint = await entrypoints.global.document.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.document,\n        () => {\n          return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n        },\n        () => {\n          return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadPagesManifest('_document')\n\n  if (entrypoints.global.error) {\n    const key = getEntryKey('pages', 'server', '_error')\n\n    const writtenEndpoint = await entrypoints.global.error.writeToDisk()\n    hooks?.handleWrittenEndpoint(key, writtenEndpoint)\n    if (dev) {\n      hooks?.subscribeToChanges(\n        key,\n        false,\n        entrypoints.global.error,\n        () => {\n          // There's a special case for this in `../client/page-bootstrap.ts`.\n          // https://github.com/vercel/next.js/blob/08d7a7e5189a835f5dcb82af026174e587575c0e/packages/next/src/client/page-bootstrap.ts#L69-L71\n          return { event: HMR_ACTIONS_SENT_TO_BROWSER.CLIENT_CHANGES }\n        },\n        () => {\n          return { action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE }\n        }\n      )\n    }\n    processIssues(currentEntryIssues, key, writtenEndpoint, false, logErrors)\n  }\n  await manifestLoader.loadBuildManifest('_error')\n  await manifestLoader.loadPagesManifest('_error')\n  await manifestLoader.loadFontManifest('_error')\n\n  await manifestLoader.writeManifests({\n    devRewrites,\n    productionRewrites,\n    entrypoints,\n  })\n}\n\nexport function removeRouteSuffix(route: string): string {\n  return route.replace(/\\/route$/, '')\n}\n\nexport function addRouteSuffix(route: string): string {\n  return route + '/route'\n}\n\nexport function addMetadataIdToRoute(route: string): string {\n  return route + '/[__metadata_id__]'\n}\n\n// Since turbopack will create app pages/route entries based on the structure,\n// which means the entry keys are based on file names.\n// But for special metadata conventions we'll change the page/pathname to a different path.\n// So we need this helper to map the new path back to original turbopack entry key.\nexport function normalizedPageToTurbopackStructureRoute(\n  route: string,\n  ext: string | false\n): string {\n  let entrypointKey = route\n  if (isMetadataRoute(entrypointKey)) {\n    entrypointKey = entrypointKey.endsWith('/route')\n      ? entrypointKey.slice(0, -'/route'.length)\n      : entrypointKey\n\n    if (ext) {\n      if (entrypointKey.endsWith('/[__metadata_id__]')) {\n        entrypointKey = entrypointKey.slice(0, -'/[__metadata_id__]'.length)\n      }\n      if (entrypointKey.endsWith('/sitemap.xml') && ext !== '.xml') {\n        // For dynamic sitemap route, remove the extension\n        entrypointKey = entrypointKey.slice(0, -'.xml'.length)\n      }\n    }\n    entrypointKey = entrypointKey + '/route'\n  }\n  return entrypointKey\n}\n"],"names":["loadJsConfig","decodeMagicIdentifier","MAGIC_IDENTIFIER_REGEX","bold","green","magenta","red","HMR_ACTIONS_SENT_TO_BROWSER","Log","getEntryKey","splitEntryKey","isInternal","isMetadataRoute","getTurbopackJsConfig","dir","nextConfig","jsConfig","compilerOptions","ModuleBuildError","Error","name","TurbopackInternalError","constructor","cause","message","stack","isWellKnownError","issue","title","formattedTitle","renderStyledStringToErrorAnsi","includes","onceErrorSet","Set","shouldEmitOnceWarning","severity","value","has","add","printNonFatalIssue","isRelevantWarning","warn","formatIssue","isNodeModulesIssue","filePath","match","description","source","documentationLink","replace","formattedFilePath","replaceAll","range","start","line","column","content","end","codeFrameColumns","require","forceColor","trim","getIssueKey","JSON","stringify","processTopLevelIssues","currentTopLevelIssues","result","clear","issues","issueKey","set","processIssues","currentEntryIssues","key","throwIssue","logErrors","newIssues","Map","relevantIssues","formatted","error","size","join","string","decodeMagicIdentifiers","str","ident","e","type","map","MILLISECONDS_IN_NANOSECOND","BigInt","msToNs","ms","Math","floor","handleRouteType","dev","page","pathname","route","entrypoints","manifestLoader","readyIds","devRewrites","productionRewrites","hooks","shouldCreateWebpackStats","process","env","TURBOPACK_STATS","clientKey","serverKey","global","app","writtenEndpoint","writeToDisk","handleWrittenEndpoint","loadBuildManifest","loadPagesManifest","document","htmlEndpoint","loadMiddlewareManifest","deleteMiddlewareManifest","loadFontManifest","loadLoadableManifest","loadWebpackStats","writeManifests","subscribeToChanges","dataEndpoint","delete","event","SERVER_ONLY_CHANGES","pages","action","RELOAD_PAGE","CLIENT_CHANGES","endpoint","rscEndpoint","change","some","SERVER_COMPONENT_CHANGES","loadAppBuildManifest","loadAppPathsManifest","loadActionManifest","AssetMapper","setPathsForKey","assetPaths","newAssetPaths","entryMap","assetPath","assetPathKeys","assetMap","get","getAssetPathsByKey","Array","from","getKeysByAsset","path","keys","hasEntrypointForKey","assetMapper","middleware","instrumentation","pageKey","_","handleEntrypoints","currentEntrypoints","pagesAppEndpoint","pagesDocumentEndpoint","pagesErrorEndpoint","routes","forEach","originalName","info","handleEntrypointsDevCleanup","unsubscribeFromChanges","sendHmr","MIDDLEWARE_CHANGES","processInstrumentation","prop","serverFields","actualInstrumentationHookFile","propagateServerField","undefined","processMiddleware","matchers","getMiddlewareManifest","finishBuilding","startBuilding","actualMiddlewareFile","changeSubscriptions","clients","clientStates","client","state","clientIssues","id","subscriptions","unsubscribeFromHmrEvents","handlePagesErrorRoute","removeRouteSuffix","addRouteSuffix","addMetadataIdToRoute","normalizedPageToTurbopackStructureRoute","ext","entrypointKey","endsWith","slice","length"],"mappings":"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"}