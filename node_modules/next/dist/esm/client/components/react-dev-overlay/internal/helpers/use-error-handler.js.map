{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/internal/helpers/use-error-handler.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { isHydrationError } from '../../../is-hydration-error'\nimport { attachHydrationErrorState } from './attach-hydration-error-state'\nimport { isNextRouterError } from '../../../is-next-router-error'\n\nexport type ErrorHandler = (error: Error) => void\n\nlet hasHydrationError = false\nconst errorQueue: Array<Error> = []\nconst errorHandlers: Array<ErrorHandler> = []\nconst rejectionQueue: Array<Error> = []\nconst rejectionHandlers: Array<ErrorHandler> = []\n\nexport function handleClientError(error: unknown) {\n  if (!error || !(error instanceof Error) || typeof error.stack !== 'string') {\n    // A non-error was thrown, we don't have anything to show. :-(\n    return\n  }\n\n  attachHydrationErrorState(error)\n\n  // Only queue one hydration every time\n  if (isHydrationError(error)) {\n    if (!hasHydrationError) {\n      errorQueue.push(error)\n    }\n    hasHydrationError = true\n  }\n  for (const handler of errorHandlers) {\n    handler(error)\n  }\n}\n\nexport function useErrorHandler(\n  handleOnUnhandledError: ErrorHandler,\n  handleOnUnhandledRejection: ErrorHandler\n) {\n  useEffect(() => {\n    // Handle queued errors.\n    errorQueue.forEach(handleOnUnhandledError)\n    rejectionQueue.forEach(handleOnUnhandledRejection)\n\n    // Listen to new errors.\n    errorHandlers.push(handleOnUnhandledError)\n    rejectionHandlers.push(handleOnUnhandledRejection)\n\n    return () => {\n      // Remove listeners.\n      errorHandlers.splice(errorHandlers.indexOf(handleOnUnhandledError), 1)\n      rejectionHandlers.splice(\n        rejectionHandlers.indexOf(handleOnUnhandledRejection),\n        1\n      )\n    }\n  }, [handleOnUnhandledError, handleOnUnhandledRejection])\n}\n\nexport function handleGlobalErrors() {\n  if (typeof window !== 'undefined') {\n    try {\n      // Increase the number of stack frames on the client\n      Error.stackTraceLimit = 50\n    } catch {}\n\n    window.addEventListener(\n      'error',\n      (event: WindowEventMap['error']): void | boolean => {\n        if (isNextRouterError(event.error)) {\n          event.preventDefault()\n          return false\n        }\n        handleClientError(event.error)\n      }\n    )\n\n    window.addEventListener(\n      'unhandledrejection',\n      (ev: WindowEventMap['unhandledrejection']): void => {\n        const reason = ev?.reason\n        if (isNextRouterError(reason)) {\n          ev.preventDefault()\n          return\n        }\n\n        if (\n          !reason ||\n          !(reason instanceof Error) ||\n          typeof reason.stack !== 'string'\n        ) {\n          // A non-error was thrown, we don't have anything to show. :-(\n          return\n        }\n\n        const e = reason\n        rejectionQueue.push(e)\n        for (const handler of rejectionHandlers) {\n          handler(e)\n        }\n      }\n    )\n  }\n}\n"],"names":["useEffect","isHydrationError","attachHydrationErrorState","isNextRouterError","hasHydrationError","errorQueue","errorHandlers","rejectionQueue","rejectionHandlers","handleClientError","error","Error","stack","push","handler","useErrorHandler","handleOnUnhandledError","handleOnUnhandledRejection","forEach","splice","indexOf","handleGlobalErrors","window","stackTraceLimit","addEventListener","event","preventDefault","ev","reason","e"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAO;AACjC,SAASC,gBAAgB,QAAQ,8BAA6B;AAC9D,SAASC,yBAAyB,QAAQ,iCAAgC;AAC1E,SAASC,iBAAiB,QAAQ,gCAA+B;AAIjE,IAAIC,oBAAoB;AACxB,MAAMC,aAA2B,EAAE;AACnC,MAAMC,gBAAqC,EAAE;AAC7C,MAAMC,iBAA+B,EAAE;AACvC,MAAMC,oBAAyC,EAAE;AAEjD,OAAO,SAASC,kBAAkBC,KAAc;IAC9C,IAAI,CAACA,SAAS,CAAEA,CAAAA,iBAAiBC,KAAI,KAAM,OAAOD,MAAME,KAAK,KAAK,UAAU;QAC1E,8DAA8D;QAC9D;IACF;IAEAV,0BAA0BQ;IAE1B,sCAAsC;IACtC,IAAIT,iBAAiBS,QAAQ;QAC3B,IAAI,CAACN,mBAAmB;YACtBC,WAAWQ,IAAI,CAACH;QAClB;QACAN,oBAAoB;IACtB;IACA,KAAK,MAAMU,WAAWR,cAAe;QACnCQ,QAAQJ;IACV;AACF;AAEA,OAAO,SAASK,gBACdC,sBAAoC,EACpCC,0BAAwC;IAExCjB,UAAU;QACR,wBAAwB;QACxBK,WAAWa,OAAO,CAACF;QACnBT,eAAeW,OAAO,CAACD;QAEvB,wBAAwB;QACxBX,cAAcO,IAAI,CAACG;QACnBR,kBAAkBK,IAAI,CAACI;QAEvB,OAAO;YACL,oBAAoB;YACpBX,cAAca,MAAM,CAACb,cAAcc,OAAO,CAACJ,yBAAyB;YACpER,kBAAkBW,MAAM,CACtBX,kBAAkBY,OAAO,CAACH,6BAC1B;QAEJ;IACF,GAAG;QAACD;QAAwBC;KAA2B;AACzD;AAEA,OAAO,SAASI;IACd,IAAI,OAAOC,WAAW,aAAa;QACjC,IAAI;YACF,oDAAoD;YACpDX,MAAMY,eAAe,GAAG;QAC1B,EAAE,UAAM,CAAC;QAETD,OAAOE,gBAAgB,CACrB,SACA,CAACC;YACC,IAAItB,kBAAkBsB,MAAMf,KAAK,GAAG;gBAClCe,MAAMC,cAAc;gBACpB,OAAO;YACT;YACAjB,kBAAkBgB,MAAMf,KAAK;QAC/B;QAGFY,OAAOE,gBAAgB,CACrB,sBACA,CAACG;YACC,MAAMC,SAASD,sBAAAA,GAAIC,MAAM;YACzB,IAAIzB,kBAAkByB,SAAS;gBAC7BD,GAAGD,cAAc;gBACjB;YACF;YAEA,IACE,CAACE,UACD,CAAEA,CAAAA,kBAAkBjB,KAAI,KACxB,OAAOiB,OAAOhB,KAAK,KAAK,UACxB;gBACA,8DAA8D;gBAC9D;YACF;YAEA,MAAMiB,IAAID;YACVrB,eAAeM,IAAI,CAACgB;YACpB,KAAK,MAAMf,WAAWN,kBAAmB;gBACvCM,QAAQe;YACV;QACF;IAEJ;AACF"}