{"version":3,"sources":["../../../src/server/request/headers.ts"],"sourcesContent":["import {\n  HeadersAdapter,\n  type ReadonlyHeaders,\n} from '../web/spec-extension/adapters/headers'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external'\nimport {\n  workUnitAsyncStorage,\n  type PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\nimport {\n  postponeWithTracking,\n  abortAndThrowOnSynchronousDynamicDataAccess,\n  throwToInterruptStaticGeneration,\n  trackDynamicDataInDynamicRender,\n} from '../app-render/dynamic-rendering'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { makeResolvedReactPromise } from './utils'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-loger'\n\n/**\n * In this version of Next.js `headers()` returns a Promise however you can still reference the properties of the underlying Headers instance\n * synchronously to facilitate migration. The `UnsafeUnwrappedHeaders` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `headers()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedHeaders` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `headers()` value can be awaited or you should call `headers()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedHeaders` in your codebase or by search for a comment that\n * starts with:\n *\n * ```\n * // TODO [sync-headers-usage]\n * ```\n * In a future version of Next.js `headers()` will only return a Promise and you will not be able to access the underlying Headers instance\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedHeaders` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedHeaders = ReadonlyHeaders\n\n/**\n * This function allows you to read the HTTP incoming request headers in\n * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),\n * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations),\n * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) and\n * [Middleware](https://nextjs.org/docs/app/building-your-application/routing/middleware).\n *\n * Read more: [Next.js Docs: `headers`](https://nextjs.org/docs/app/api-reference/functions/headers)\n */\nexport function headers(): Promise<ReadonlyHeaders> {\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (workStore) {\n    if (workStore.forceStatic) {\n      // When using forceStatic we override all other logic and always just return an empty\n      // headers object without tracking\n      const underlyingHeaders = HeadersAdapter.seal(new Headers({}))\n      return makeUntrackedExoticHeaders(underlyingHeaders)\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'cache') {\n        throw new Error(\n          `Route ${workStore.route} used \"headers\" inside \"use cache\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/messages/next-request-in-use-cache`\n        )\n      } else if (workUnitStore.type === 'unstable-cache') {\n        throw new Error(\n          `Route ${workStore.route} used \"headers\" inside a function cached with \"unstable_cache(...)\". Accessing Dynamic data sources inside a cache scope is not supported. If you need this data inside a cached function use \"headers\" outside of the cached function and pass the required dynamic data in as an argument. See more info here: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n        )\n      }\n    }\n    if (workStore.dynamicShouldError) {\n      throw new StaticGenBailoutError(\n        `Route ${workStore.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`headers\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n      )\n    }\n\n    if (workUnitStore) {\n      if (workUnitStore.type === 'prerender') {\n        // dynamicIO Prerender\n        // We don't track dynamic access here because access will be tracked when you access\n        // one of the properties of the headers object.\n        return makeDynamicallyTrackedExoticHeaders(\n          workStore.route,\n          workUnitStore\n        )\n      } else if (workUnitStore.type === 'prerender-ppr') {\n        // PPR Prerender (no dynamicIO)\n        // We are prerendering with PPR. We need track dynamic access here eagerly\n        // to keep continuity with how headers has worked in PPR without dynamicIO.\n        // TODO consider switching the semantic to throw on property access instead\n        postponeWithTracking(\n          workStore.route,\n          'headers',\n          workUnitStore.dynamicTracking\n        )\n      } else if (workUnitStore.type === 'prerender-legacy') {\n        // Legacy Prerender\n        // We are in a legacy static generation mode while prerendering\n        // We track dynamic access here so we don't need to wrap the headers in\n        // individual property access tracking.\n        throwToInterruptStaticGeneration('headers', workStore, workUnitStore)\n      }\n    }\n    // We fall through to the dynamic context below but we still track dynamic access\n    // because in dev we can still error for things like using headers inside a cache context\n    trackDynamicDataInDynamicRender(workStore, workUnitStore)\n  }\n\n  const requestStore = getExpectedRequestStore('headers')\n  if (process.env.NODE_ENV === 'development' && !workStore?.isPrefetchRequest) {\n    return makeUntrackedExoticHeadersWithDevWarnings(\n      requestStore.headers,\n      workStore?.route\n    )\n  } else {\n    return makeUntrackedExoticHeaders(requestStore.headers)\n  }\n}\n\ninterface CacheLifetime {}\nconst CachedHeaders = new WeakMap<CacheLifetime, Promise<ReadonlyHeaders>>()\n\nfunction makeDynamicallyTrackedExoticHeaders(\n  route: string,\n  prerenderStore: PrerenderStoreModern\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(prerenderStore)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeHangingPromise<ReadonlyHeaders>()\n  CachedHeaders.set(prerenderStore, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: function append() {\n        const expression = `headers().append(${describeNameArg(arguments[0])}, ...)`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    delete: {\n      value: function _delete() {\n        const expression = `headers().delete(${describeNameArg(arguments[0])})`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    get: {\n      value: function get() {\n        const expression = `headers().get(${describeNameArg(arguments[0])})`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    has: {\n      value: function has() {\n        const expression = `headers().has(${describeNameArg(arguments[0])})`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    set: {\n      value: function set() {\n        const expression = `headers().set(${describeNameArg(arguments[0])}, ...)`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    getSetCookie: {\n      value: function getSetCookie() {\n        const expression = `headers().getSetCookie()`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    forEach: {\n      value: function forEach() {\n        const expression = `headers().forEach(...)`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    keys: {\n      value: function keys() {\n        const expression = `headers().keys()`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    values: {\n      value: function values() {\n        const expression = `headers().values()`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    entries: {\n      value: function entries() {\n        const expression = `headers().entries()`\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n    [Symbol.iterator]: {\n      value: function () {\n        const expression = 'headers()[Symbol.iterator]()'\n        abortAndThrowOnSynchronousDynamicDataAccess(\n          route,\n          expression,\n          prerenderStore\n        )\n      },\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticHeaders(\n  underlyingHeaders: ReadonlyHeaders\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeResolvedReactPromise(underlyingHeaders)\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: underlyingHeaders.append.bind(underlyingHeaders),\n    },\n    delete: {\n      value: underlyingHeaders.delete.bind(underlyingHeaders),\n    },\n    get: {\n      value: underlyingHeaders.get.bind(underlyingHeaders),\n    },\n    has: {\n      value: underlyingHeaders.has.bind(underlyingHeaders),\n    },\n    set: {\n      value: underlyingHeaders.set.bind(underlyingHeaders),\n    },\n    getSetCookie: {\n      value: underlyingHeaders.getSetCookie.bind(underlyingHeaders),\n    },\n    forEach: {\n      value: underlyingHeaders.forEach.bind(underlyingHeaders),\n    },\n    keys: {\n      value: underlyingHeaders.keys.bind(underlyingHeaders),\n    },\n    values: {\n      value: underlyingHeaders.values.bind(underlyingHeaders),\n    },\n    entries: {\n      value: underlyingHeaders.entries.bind(underlyingHeaders),\n    },\n    [Symbol.iterator]: {\n      value: underlyingHeaders[Symbol.iterator].bind(underlyingHeaders),\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction makeUntrackedExoticHeadersWithDevWarnings(\n  underlyingHeaders: ReadonlyHeaders,\n  route?: string\n): Promise<ReadonlyHeaders> {\n  const cachedHeaders = CachedHeaders.get(underlyingHeaders)\n  if (cachedHeaders) {\n    return cachedHeaders\n  }\n\n  const promise = makeResolvedReactPromise(underlyingHeaders)\n  CachedHeaders.set(underlyingHeaders, promise)\n\n  Object.defineProperties(promise, {\n    append: {\n      value: function append() {\n        const expression = `headers().append(${describeNameArg(arguments[0])}, ...)`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.append.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    delete: {\n      value: function _delete() {\n        const expression = `headers().delete(${describeNameArg(arguments[0])})`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.delete.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    get: {\n      value: function get() {\n        const expression = `headers().get(${describeNameArg(arguments[0])})`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.get.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    has: {\n      value: function has() {\n        const expression = `headers().has(${describeNameArg(arguments[0])})`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.has.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    set: {\n      value: function set() {\n        const expression = `headers().set(${describeNameArg(arguments[0])}, ...)`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.set.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    getSetCookie: {\n      value: function getSetCookie() {\n        const expression = `headers().getSetCookie()`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.getSetCookie.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    forEach: {\n      value: function forEach() {\n        const expression = `headers().forEach(...)`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.forEach.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    keys: {\n      value: function keys() {\n        const expression = `headers().keys()`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.keys.apply(underlyingHeaders, arguments as any)\n      },\n    },\n    values: {\n      value: function values() {\n        const expression = `headers().values()`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.values.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    entries: {\n      value: function entries() {\n        const expression = `headers().entries()`\n        warnForSyncAccess(route, expression)\n        return underlyingHeaders.entries.apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n    [Symbol.iterator]: {\n      value: function () {\n        warnForSyncIteration(route)\n        return underlyingHeaders[Symbol.iterator].apply(\n          underlyingHeaders,\n          arguments as any\n        )\n      },\n    },\n  } satisfies HeadersExtensions)\n\n  return promise\n}\n\nfunction describeNameArg(arg: unknown) {\n  return typeof arg === 'string' ? `'${arg}'` : '...'\n}\n\nconst noop = () => {}\n\nconst warnForSyncIteration = process.env\n  .__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(\n      function getSyncIterationMessage(route?: string) {\n        const prefix = route ? ` In route ${route} ` : ''\n        return (\n          `${prefix}headers were iterated over. ` +\n          `\\`headers()\\` should be awaited before using its value. ` +\n          `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n        )\n      }\n    )\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(function getSyncAccessMessage(\n      route: undefined | string,\n      expression: string\n    ) {\n      const prefix = route ? ` In route ${route} a ` : 'A '\n      return (\n        `${prefix}header property was accessed directly with \\`${expression}\\`. ` +\n        `\\`headers()\\` should be awaited before using its value. ` +\n        `Learn more: https://nextjs.org/docs/messages/sync-dynamic-apis`\n      )\n    })\n\ntype HeadersExtensions = {\n  [K in keyof ReadonlyHeaders]: unknown\n}\n"],"names":["headers","workStore","workAsyncStorage","getStore","workUnitStore","workUnitAsyncStorage","forceStatic","underlyingHeaders","HeadersAdapter","seal","Headers","makeUntrackedExoticHeaders","type","Error","route","dynamicShouldError","StaticGenBailoutError","makeDynamicallyTrackedExoticHeaders","postponeWithTracking","dynamicTracking","throwToInterruptStaticGeneration","trackDynamicDataInDynamicRender","requestStore","getExpectedRequestStore","process","env","NODE_ENV","isPrefetchRequest","makeUntrackedExoticHeadersWithDevWarnings","CachedHeaders","WeakMap","prerenderStore","cachedHeaders","get","promise","makeHangingPromise","set","Object","defineProperties","append","value","expression","describeNameArg","arguments","abortAndThrowOnSynchronousDynamicDataAccess","delete","_delete","has","getSetCookie","forEach","keys","values","entries","Symbol","iterator","makeResolvedReactPromise","bind","warnForSyncAccess","apply","warnForSyncIteration","arg","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","createDedupedByCallsiteServerErrorLoggerDev","getSyncIterationMessage","prefix","getSyncAccessMessage"],"mappings":"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"}