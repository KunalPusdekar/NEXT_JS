{"version":3,"sources":["../../../src/server/request/draft-mode.ts"],"sourcesContent":["import { getExpectedRequestStore } from '../app-render/work-unit-async-storage.external'\n\nimport type { DraftModeProvider } from '../async-storage/draft-mode-provider'\n\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { workUnitAsyncStorage } from '../app-render/work-unit-async-storage.external'\nimport { trackDynamicDataAccessed } from '../app-render/dynamic-rendering'\nimport { createDedupedByCallsiteServerErrorLoggerDev } from '../create-deduped-by-callsite-server-error-loger'\n\n/**\n * In this version of Next.js `draftMode()` returns a Promise however you can still reference the properties of the underlying draftMode object\n * synchronously to facilitate migration. The `UnsafeUnwrappedDraftMode` type is added to your code by a codemod that attempts to automatically\n * updates callsites to reflect the new Promise return type. There are some cases where `draftMode()` cannot be automatically converted, namely\n * when it is used inside a synchronous function and we can't be sure the function can be made async automatically. In these cases we add an\n * explicit type case to `UnsafeUnwrappedDraftMode` to enable typescript to allow for the synchronous usage only where it is actually necessary.\n *\n * You should should update these callsites to either be async functions where the `draftMode()` value can be awaited or you should call `draftMode()`\n * from outside and await the return value before passing it into this function.\n *\n * You can find instances that require manual migration by searching for `UnsafeUnwrappedDraftMode` in your codebase or by search for a comment that\n * starts with:\n *\n * ```\n * // TODO [sync-draftMode-usage]\n * ```\n * In a future version of Next.js `draftMode()` will only return a Promise and you will not be able to access the underlying draftMode object directly\n * without awaiting the return value first. When this change happens the type `UnsafeUnwrappedDraftMode` will be updated to reflect that is it no longer\n * usable.\n *\n * This type is marked deprecated to help identify it as target for refactoring away.\n *\n * @deprecated\n */\nexport type UnsafeUnwrappedDraftMode = DraftMode\n\nexport function draftMode(): Promise<DraftMode> {\n  const callingExpression = 'draftMode'\n  const workStore = workAsyncStorage.getStore()\n  const workUnitStore = workUnitAsyncStorage.getStore()\n\n  if (\n    workUnitStore &&\n    (workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache' ||\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-ppr' ||\n      workUnitStore.type === 'prerender-legacy')\n  ) {\n    // Return empty draft mode\n    if (\n      process.env.NODE_ENV === 'development' &&\n      !workStore?.isPrefetchRequest\n    ) {\n      const route = workStore?.route\n      return createExoticDraftModeWithDevWarnings(null, route)\n    } else {\n      return createExoticDraftMode(null)\n    }\n  }\n\n  const requestStore = getExpectedRequestStore(callingExpression)\n\n  const cachedDraftMode = CachedDraftModes.get(requestStore.draftMode)\n  if (cachedDraftMode) {\n    return cachedDraftMode\n  }\n\n  let promise\n  if (process.env.NODE_ENV === 'development' && !workStore?.isPrefetchRequest) {\n    const route = workStore?.route\n    promise = createExoticDraftModeWithDevWarnings(\n      requestStore.draftMode,\n      route\n    )\n  } else {\n    promise = createExoticDraftMode(requestStore.draftMode)\n  }\n  CachedDraftModes.set(requestStore.draftMode, promise)\n  return promise\n}\n\ninterface CacheLifetime {}\nconst CachedDraftModes = new WeakMap<CacheLifetime, Promise<DraftMode>>()\n\nfunction createExoticDraftMode(\n  underlyingProvider: null | DraftModeProvider\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  Object.defineProperty(promise, 'isEnabled', {\n    get() {\n      return instance.isEnabled\n    },\n    set(newValue) {\n      Object.defineProperty(promise, 'isEnabled', {\n        value: newValue,\n        writable: true,\n        enumerable: true,\n      })\n    },\n    enumerable: true,\n    configurable: true,\n  })\n  ;(promise as any).enable = instance.enable.bind(instance)\n  ;(promise as any).disable = instance.disable.bind(instance)\n\n  return promise\n}\n\nfunction createExoticDraftModeWithDevWarnings(\n  underlyingProvider: null | DraftModeProvider,\n  route: undefined | string\n): Promise<DraftMode> {\n  const instance = new DraftMode(underlyingProvider)\n  const promise = Promise.resolve(instance)\n\n  Object.defineProperty(promise, 'isEnabled', {\n    get() {\n      const expression = 'draftMode().isEnabled'\n      warnForSyncAccess(route, expression)\n      return instance.isEnabled\n    },\n    set(newValue) {\n      Object.defineProperty(promise, 'isEnabled', {\n        value: newValue,\n        writable: true,\n        enumerable: true,\n      })\n    },\n    enumerable: true,\n    configurable: true,\n  })\n\n  Object.defineProperty(promise, 'enable', {\n    value: function get() {\n      const expression = 'draftMode().enable()'\n      warnForSyncAccess(route, expression)\n      return instance.enable.apply(instance, arguments as any)\n    },\n  })\n\n  Object.defineProperty(promise, 'disable', {\n    value: function get() {\n      const expression = 'draftMode().disable()'\n      warnForSyncAccess(route, expression)\n      return instance.disable.apply(instance, arguments as any)\n    },\n  })\n\n  return promise\n}\n\nclass DraftMode {\n  /**\n   * @internal - this declaration is stripped via `tsc --stripInternal`\n   */\n  private readonly _provider: null | DraftModeProvider\n\n  constructor(provider: null | DraftModeProvider) {\n    this._provider = provider\n  }\n  get isEnabled() {\n    if (this._provider !== null) {\n      return this._provider.isEnabled\n    }\n    return false\n  }\n  public enable() {\n    const store = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (store) {\n      // We we have a store we want to track dynamic data access to ensure we\n      // don't statically generate routes that manipulate draft mode.\n      trackDynamicDataAccessed(store, workUnitStore, 'draftMode().enable()')\n    }\n    if (this._provider !== null) {\n      this._provider.enable()\n    }\n  }\n  public disable() {\n    const store = workAsyncStorage.getStore()\n    const workUnitStore = workUnitAsyncStorage.getStore()\n    if (store) {\n      // We we have a store we want to track dynamic data access to ensure we\n      // don't statically generate routes that manipulate draft mode.\n      trackDynamicDataAccessed(store, workUnitStore, 'draftMode().disable()')\n    }\n    if (this._provider !== null) {\n      this._provider.disable()\n    }\n  }\n}\n\nconst noop = () => {}\n\nconst warnForSyncAccess = process.env.__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS\n  ? noop\n  : createDedupedByCallsiteServerErrorLoggerDev(function getSyncAccessWarning(\n      route: undefined | string,\n      expression: string\n    ) {\n      const prefix = route ? ` In route ${route} a ` : 'A '\n      return (\n        `${prefix}\\`draftMode()\\` property was accessed directly with \\`${expression}\\`. ` +\n        `\\`draftMode()\\` should be awaited before using its value. ` +\n        `Learn more: https://nextjs.org/docs/messages/draft-mode-sync-access`\n      )\n    })\n"],"names":["draftMode","callingExpression","workStore","workAsyncStorage","getStore","workUnitStore","workUnitAsyncStorage","type","process","env","NODE_ENV","isPrefetchRequest","route","createExoticDraftModeWithDevWarnings","createExoticDraftMode","requestStore","getExpectedRequestStore","cachedDraftMode","CachedDraftModes","get","promise","set","WeakMap","underlyingProvider","instance","DraftMode","Promise","resolve","Object","defineProperty","isEnabled","newValue","value","writable","enumerable","configurable","enable","bind","disable","expression","warnForSyncAccess","apply","arguments","constructor","provider","_provider","store","trackDynamicDataAccessed","noop","__NEXT_DISABLE_SYNC_DYNAMIC_API_WARNINGS","createDedupedByCallsiteServerErrorLoggerDev","getSyncAccessWarning","prefix"],"mappings":"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"}